
name: Publish application to ECR

on:
  push:
    branches:
      - main
    paths:
      - nginx-application/**
      - .github/workflows/app-publish-image.yaml

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_NAME }}
  APP_DIR: nginx-application

jobs:

  setup-stage:
    name: Set environment based on branch
    outputs:
      phase: ${{ steps.env-name.outputs.phase }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Environment Name
        id: env-name
        run: |
          if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
              echo "::set-output name=phase::testing"
          else
              echo "::set-output name=phase::unknown"
          fi

  deploy:
    name: Publish application to ECR

    needs: setup-stage

    runs-on: ubuntu-latest

    environment: 
      name: ${{needs.setup-stage.outputs.phase}}
      url: http://thaeimos.com/${{needs.setup-stage.outputs.phase}}
    
    defaults:
      run:
        shell: bash
        working-directory: frontend-app

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags 
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"